<!--
	Dynamically generated by Chef on <%= node["fqdn"] %>
	Local modifications will be overwritten by Chef.
-->
<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config"
	xmlns:conf="urn:mace:shibboleth:2.0:native:sp:config"
	xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
	xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"    
	xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
	xmlns:mdui="urn:oasis:names:tc:SAML:metadata:ui"
	clockSkew="180">

	<!--
	By default, in-memory StorageService, ReplayCache, ArtifactMap, and SessionCache
	are used. See example-shibboleth2.xml for samples of explicitly configuring them.
	-->

	<!--
	To customize behavior for specific resources on Apache, and to link vhosts or
	resources to ApplicationOverride settings below, use web server options/commands.
	See https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPConfigurationElements for help.
	
	For examples with the RequestMap XML syntax instead, see the example-shibboleth2.xml
	file, and the https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPRequestMapHowTo topic.
	-->
	
	<!-- The ApplicationDefaults element is where most of Shibboleth's SAML bits are defined. -->
	<ApplicationDefaults entityID="<%= node['shibboleth-standalone']['entityID'] %>"
            REMOTE_USER="<%= node['shibboleth-standalone']['REMOTE_USER'] %>" 
            signing="<%= node['shibboleth-standalone']['sign-messages'] %>"<% if node['shibboleth-standalone']['attributePrefix'] -%>
            attributePrefix="<%= node['shibboleth-standalone']['attributePrefix'] %>"<% end -%>>

		<!--
		Controls session lifetimes, address checks, cookie handling, and the protocol handlers.
		You MUST supply an effectively unique handlerURL value for each of your applications.
		The value defaults to /Shibboleth.sso, and should be a relative path, with the SP computing
		a relative value based on the virtual host. Using handlerSSL="true", the default, will force
		the protocol to be https. You should also set cookieProps to "https" for SSL-only sites.
		Note that while we default checkAddress to "false", this has a negative impact on the
		security of your site. Stealing sessions via cookie theft is much easier with this disabled.
		-->
		<Sessions lifetime="<%= node['shibboleth-standalone']['Sessions']['lifetime'] %>" timeout="<%= node['shibboleth-standalone']['Sessions']['timeout'] %>" relayState="<%= node['shibboleth-standalone']['Sessions']['relayState'] %>"
				  checkAddress="<%= node['shibboleth-standalone']['Sessions']['checkAddress'] %>" handlerSSL="<%= node['shibboleth-standalone']['Sessions']['handlerSSL'] %>" cookieProps="<%= node['shibboleth-standalone']['Sessions']['cookieProps'] %>">

			<!--
			Configures SSO for a default IdP. To allow for >1 IdP, remove
			entityID property and adjust discoveryURL to point to discovery service.
			(Set discoveryProtocol to "WAYF" for legacy Shibboleth WAYF support.)
			You can also override entityID on /Login query string, or in RequestMap/htaccess.
			-->
			<% if node['shibboleth-standalone']['SSO']['discoveryURL'].empty? -%>
			<SSO entityID="<%= node['shibboleth-standalone']['SSO']['entityID'] %>">
			<% else -%>
			<SSO discoveryProtocol="<%= node['shibboleth-standalone']['SSO']['discoveryProtocol'] %>" discoveryURL="<%= node['shibboleth-standalone']['SSO']['discoveryURL'] %>">            
			<% end -%>
			  SAML2 SAML1
			</SSO>

			<!-- SAML and local-only logout. -->
			<Logout>SAML2 Local</Logout>
			
			<!-- Extension service that generates "approximate" metadata based on SP configuration. -->
			<% if node['shibboleth-standalone']['Handler']['MetadataGenerator']['childElements'] -%>
			<Handler type="MetadataGenerator" Location="/Metadata" signing="false">
				<%= node['shibboleth-standalone']['Handler']['MetadataGenerator']['childElements'] %>
			</Handler>
			<% else -%>			
			<Handler type="MetadataGenerator" Location="/Metadata" signing="false"/>
			<% end -%>

			<!-- Status reporting service. -->
			<Handler type="Status" Location="/Status" 
			<% if !node['shibboleth-standalone']['Handler']['Status']['acl'].empty? -%>
				acl="<%= node['shibboleth-standalone']['Handler']['Status']['acl'] %>"
			<% end -%>
			/>

			<!-- Session diagnostic service. -->
			<Handler type="Session" Location="/Session" showAttributeValues="false"/>

			<!-- JSON feed of discovery information. -->
			<Handler type="DiscoveryFeed" Location="/DiscoFeed"/>
		</Sessions>

		<!--
		Allows overriding of error template information/filenames. You can
		also add attributes with values that can be plugged into the templates.
		-->
		<Errors supportContact="<%= node['shibboleth-standalone']['Errors']['supportContact'] %>"
			helpLocation="<%= node['shibboleth-standalone']['Errors']['helpLocation'] %>"
			styleSheet="<%= node['shibboleth-standalone']['Errors']['styleSheet'] %>"
			logoLocation="<%= node['shibboleth-standalone']['Errors']['logoLocation'] %>" />
		
		<!-- Example of remotely supplied batch of signed metadata. -->
		<!--
		<MetadataProvider type="XML" uri="http://federation.org/federation-metadata.xml"
			  backingFilePath="federation-metadata.xml" reloadInterval="7200">
			<MetadataFilter type="RequireValidUntil" maxValidityInterval="2419200"/>
			<MetadataFilter type="Signature" certificate="fedsigner.pem"/>
		</MetadataProvider>
		-->

		<!-- Example of locally maintained metadata. -->
		<!--
		<MetadataProvider type="XML" file="partner-metadata.xml"/>
		-->
		<% if node['shibboleth-standalone']['MetadataProvider'] -%>
			<% case node['shibboleth-standalone']['MetadataProvider']['type'] -%>
			<% when "Folder" -%>
				<MetadataProvider type="Folder" path="<%= node['shibboleth-standalone']['MetadataProvider']['path'] %>"/>
			<% else -%>
				<% if node['shibboleth-standalone']['MetadataProvider']['path'] -%>
				<MetadataProvider type="XML"
					path="<%= node['shibboleth-standalone']['MetadataProvider']['path'] %>"/>
				<% else -%>
				<MetadataProvider type="XML"
					url="<%= node['shibboleth-standalone']['MetadataProvider']['url'] %>"
					backingFilePath="<%= node['shibboleth-standalone']['MetadataProvider']['backingFilePath'] ? node['shibboleth-standalone']['MetadataProvider']['backingFilePath'] : 'idp-metadata.xml' %>"
					<%- if node['shibboleth-standalone']['MetadataProvider']['reloadInterval'] %>
					reloadInterval="<%= node['shibboleth-standalone']['MetadataProvider']['reloadInterval'] %>"
					<% end -%>
					>
				</MetadataProvider>
				<% end -%>
			<% end -%>
		<% end -%>

		<!-- Map to extract attributes from SAML assertions. -->
		<AttributeExtractor type="XML" validate="true" reloadChanges="false" path="attribute-map.xml"/>
		
		
		<!-- Use a SAML query if no attributes are supplied during SSO. -->
		<% unless node['shibboleth-standalone']['saml-query'] -%><!--<% end -%>
		<AttributeResolver type="Query" subjectMatch="true"/>
		<% unless node['shibboleth-standalone']['saml-query'] -%>--><% end -%>

		<!-- Default filtering policy for recognized attributes, lets other data pass. -->
		<AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

		<!-- Simple file-based resolver for using a single keypair. -->
		<CredentialResolver type="File" key="sp-key.pem" certificate="sp-cert.pem"/>

		<!--
		The default settings can be overridden by creating ApplicationOverride elements (see
		the https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPApplicationOverride topic).
		Resource requests are mapped by web server commands, or the RequestMapper, to an
		applicationId setting.
		
		Example of a second application (for a second vhost) that has a different entityID.
		Resources on the vhost would map to an applicationId of "admin":
		-->
		<!--
		<ApplicationOverride id="admin" entityID="https://admin.example.org/shibboleth"/>
		-->
		<% if node['shibboleth-standalone']['ApplicationOverrides'] -%>
		<% node['shibboleth-standalone']['ApplicationOverrides'].each do |app| -%>
			<ApplicationOverride id="<%= app['id'] %>"
				<% if app['entityID'] -%>
				entityID="<%= app['entityID'] %>"
				<% end -%>
			>
			<% if app['AttributeExtractor'] -%>
				<AttributeExtractor type="XML" validate="true" path="<%= app['AttributeExtractor'] %>"/>
			<% end -%>
			<% if app['AttributeFilter'] -%>
				<AttributeFilter type="XML" validate="true" path="<%= app['AttributeFilter'] %>"/>
			<% end -%>
			</ApplicationOverride>
		<% end -%>
		<% end -%>
	</ApplicationDefaults>
	
	<!-- Policies that determine how to process and authenticate runtime messages. -->
	<SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

	<!-- Low-level configuration about protocols and bindings available for use. -->
	<ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

</SPConfig>
